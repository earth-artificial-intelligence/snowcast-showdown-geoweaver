[{
  "history_id" : "6f3cxxsh7og",
  "history_input" : "import numpy as np\nfrom os import path\nimport pandas as pd\nfrom scipy import spatial\n\ndef getembindex(stswe, gridswe, days, modelsdir=path.join('..','models'), print=print):\n    fname = path.join(modelsdir,'eindex.csv')\n    if path.isfile(fname):\n        eindex = pd.read_csv(fname)\n    elif 'train' in stswe:\n        eindex = [stswe[mode].index for mode in stswe]+[\n                gridswe['train'].index[np.vstack([np.isfinite(gridswe['train'][d]) for d in days['train']]).sum(0) > 10]]\n        eindex = np.unique(np.hstack(eindex))\n        eindex = pd.DataFrame({'emb': np.arange(eindex.shape[0]+1), 'index': np.hstack(['None']+[eindex])})\n        for lab in ['longitude', 'latitude']:\n            eindex[lab] = np.full(eindex.shape[0],np.nan)\n        for mode in stswe:\n            _,i1,j1 = np.intersect1d(eindex['index'],stswe[mode].index,return_indices=True)\n            _,i2,j2 = np.intersect1d(eindex['index'],gridswe[mode].index,return_indices=True)\n            for lab in ['longitude', 'latitude']:\n                eindex[lab].values[i1] = stswe[mode][lab].values[j1]\n                eindex[lab].values[i2] = gridswe[mode][lab].values[j2]\n        eindex.set_index('index').to_csv(fname)\n    else:\n        print (\"Cannot load \"+fname)\n        \n    nstations = eindex.shape[0]\n    for mode in stswe:\n        for d in [stswe, gridswe]:\n            tree = spatial.KDTree(np.vstack((eindex['longitude'],eindex['latitude'])).T)\n            dis,ind = tree.query(np.vstack((d[mode]['longitude'], d[mode]['latitude'])).T)\n            ok = np.nonzero(dis<0.02)[0]\n            ind = ind[ok]\n            d[mode]['emb1'] = np.zeros(d[mode].shape[0],dtype=np.int64)\n            d[mode]['emb1'].values[ok] = eindex['emb'].values[ind]\n    eindex.pop('latitude')\n    eindex.pop('longitude')            \n    for mode in stswe:\n        if 'emb' in stswe[mode]:\n            stswe[mode].pop('emb')\n            gridswe[mode].pop('emb')\n        stswe[mode] = stswe[mode].join(eindex.rename({'index': 'station_id'}, axis=1).set_index('station_id'))\n        gridswe[mode] = gridswe[mode].join(eindex.rename({'index': 'cell_id'}, axis=1).set_index('cell_id'))\n        for d in [gridswe[mode], stswe[mode]]:\n            d['femb'] = np.isnan(d['emb'])\n            d['emb'].values[d['femb']] = d['emb1'].values[d['femb']]\n            d['emb'] = d['emb'].astype(np.int64)\n            d['isemb'] = (d['emb']==0).astype(np.float32)\n        \n    # eindex = pd.read_csv(fname)\n    # for d in [stswe, gridswe]:\n    #     for mode in d:\n    #         vi = (((d[mode]['emb'].values!=0)&(d[mode]['emb1'].values==0))|((d[mode]['emb1'].values!=0)&(d[mode]['emb'].values==0))).nonzero()[0]\n    #         e = d[mode]['emb'][vi]\n    #         e1 = d[mode]['emb1'][vi]\n    #         print({lab: np.vstack([eindex[lab].values[e],eindex[lab].values[e1]]).T for lab in ['longitude', 'latitude']})\n    isst = np.array([len(i)<20 for i in eindex['index']])\n    isst[0] = False\n    for mode in gridswe:\n        if mode == 'test':\n            gridswe[mode]['fstation'] = isst[gridswe[mode]['emb1']] & gridswe[mode]['femb']\n            # for tday in days[mode]:\n            #     g = gridswe[mode][tday].values[gridswe[mode]['fstation']]\n            #     ok = np.isfinite(g)\n            #     if ok.sum():\n            #         print(f\"{mode} {tday} {g[ok]}\")\n        else:\n            gridswe[mode]['fstation'] = np.full(gridswe[mode].shape[0], False)\n    # for mode in gridswe:\n    #     vi = isst[gridswe[mode]['emb1']] & gridswe[mode]['femb']\n    #     es = stswe[mode]['emb'].values.copy()\n    #     es[es==0] = -1\n    #     _,i,j = np.intersect1d(gridswe[mode]['emb1'].values*vi,es,return_indices=True)\n    #     for tday in days[mode]:\n    #         g = gridswe[mode][tday].values[i]\n    #         s = stswe[mode][tday].values[j]\n    #         ok = np.isfinite(g+s) # & (s==0)\n    #         if ok.sum():\n    #             print(f\"{mode} {tday} {np.abs(g[ok]-s[ok]).mean()} {np.vstack((g[ok],s[ok])).T}\")\n                # print(f\"{mode} {tday} {np.vstack((gridswe[mode]['longitude'].values[i][ok],gridswe[mode]['latitude'].values[i][ok],stswe[mode]['longitude'].values[j][ok],stswe[mode]['latitude'].values[j][ok],g[ok],s[ok])).T}\")\n    return stswe, gridswe, nstations",
  "history_output" : "",
  "history_begin_time" : 1668624361894,
  "history_end_time" : 1668624363867,
  "history_notes" : null,
  "history_process" : "ccrrp0",
  "host_id" : "100001",
  "indicator" : "Done"
},]
